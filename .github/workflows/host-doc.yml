name: Doc host
run-name: Doc (${{inputs.host-triple}})

on:
  workflow_call:
    inputs:
      host-triple:
        type: string
        description: The Rust triple of the host platform
      runner:
        type: string
        description: The GitHub Runner to run on
      build-run-id:
        type: string
        description: The run id of the build workflow
      build-artifact:
        type: string
        description: The artifact from the build workflow
      container:
        type: string
        description: The container URI to run the build in, if any (Linux only)
      environment:
        type: string
    outputs:
      run-id:
        description: The id of the workflow run
        value: ${{ github.run_id }}
      artifact-doc:
        description: The name of the doc job artifact
        value: ${{ jobs.doc.outputs.artifact-name }}

env:
  # TODO: Remove this when we auth with AWS
  OUTSIDE_FERROUS: 1

jobs:

  doc:
    runs-on: ${{ inputs.runner }}
    env:
      ARTIFACT: doc-${{inputs.host-triple}}
      FERROCENE_HOST: ${{ inputs.host-triple }}
      # See ferrocene/ci/split-tasks.py for a list of tasks executed by this.
      # Run dist before test to make sure the tarballs we test are uploaded
      # to CI beforehand, for manual inspection in case of failures.
      SCRIPT: |
        ./x.py --stage 2 dist $(ferrocene/ci/split-tasks.py dist:docs)
        ./x.py --stage 2 test $(ferrocene/ci/split-tasks.py test:docs)
    outputs:
      artifact-name: ${{ env.ARTIFACT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup/
      
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ (github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/hoverbear/gha-migration') && secrets.AZURE_OIDC_GHA_CLIENT_ID_STAGING || secrets.AZURE_OIDC_GHA_CLIENT_ID_TRYING }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Authenicate docker with Azure
        if: ${{ (runner.os == 'Linux') }}
        run: az acr login --name ferrocenecr

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.build-artifact }}
          run-id: ${{ inputs.build-run-id }}
      - name: Post artifact download steps
        run: uv run ./ferrocene/ci/scripts/build_cache.py post-download

      - name: Run
        if: ${{ inputs.container == '' }}
        shell: bash
        run: ferrocene/ci/run.sh

      - name: Run in container
        if: ${{ inputs.container != '' }}
        shell: bash
        run: |
          docker run \
            --rm \
            --interactive \
            --env SCRIPT \
            --env FERROCENE_HOST \
            --env FERROCENE_TARGETS \
            --env OUTSIDE_FERROUS \
            --env CI \
            --workdir /home/ci/project \
            --mount "type=bind,src=$(pwd),dst=/home/ci/project" \
            --user $(id -u):$(id -g) \
            --network host \
            ${{ inputs.container }}
            ferrocene/ci/run.sh

      - uses: actions/upload-artifact@v4
        id: artifact
        with:
          name: ${{ env.ARTIFACT }}
          path: build/doc
          retention-days: 1
