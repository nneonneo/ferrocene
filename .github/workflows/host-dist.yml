name: Dist host
run-name: Dist (${{inputs.host-triple}})

on:
  workflow_call:
    inputs:
      host-triple:
        type: string
        description: The Rust triple of the host platform
      triples:
        type: string
        description: A comma separated list of targets to build
      runner:
        type: string
        description: The GitHub Runner to run on
      build-run-id:
        type: string
        description: The run id of the build workflow
      build-artifact:
        type: string
        description: The artifact from the build workflow
      container:
        type: string
        description: The container URI to run the build in, if any (Linux only)
      environment:
        type: string
    outputs:
      run-id:
        description: The id of the workflow run
        value: ${{ github.run_id }}
      artifact-dist:
        description: The name of the dist job artifact
        value: ${{ jobs.dist.outputs.artifact-name }}
      artifact-tools:
        description: The name of the tools job artifact
        value: ${{ jobs.tools.outputs.artifact-name }}

jobs:

  dist:
    runs-on: ${{ inputs.runner }}
    env:
      ARTIFACT: dist-${{inputs.host-triple}}
      FERROCENE_HOST: ${{ inputs.host-triple }}
      FERROCENE_TARGETS: ${{ inputs.triples }}
    outputs:
      artifact-name: ${{ env.ARTIFACT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup/
        with:
          build-dependencies: ${{ (inputs.container != '') && 'false' || 'true' }}
      
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ (github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/hoverbear/gha-migration') && secrets.AZURE_OIDC_GHA_CLIENT_ID_STAGING || secrets.AZURE_OIDC_GHA_CLIENT_ID_TRYING }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Authenicate docker with Azure
        if: ${{ (runner.os == 'Linux') }}
        run: az acr login --name ferrocenecr

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.build-artifact }}
          run-id: ${{ inputs.build-run-id }}
      - name: Post artifact download steps
        run: uv run ./ferrocene/ci/scripts/build_cache.py post-download

      - name: Run
        uses: ./.github/actions/run/
        with:
          container: ${{ inputs.container }}
          # See ferrocene/ci/split-tasks.py for a list of tasks executed by this.
          script: |
            ./x.py --stage 2 dist $(uv run ferrocene/ci/split-tasks.py dist)

      - uses: actions/upload-artifact@v4
        id: artifact
        with:
          name: ${{ env.ARTIFACT }}
          path: build/dist
          retention-days: 1

  tools:
    runs-on: ${{ inputs.runner }}
    env:
      ARTIFACT: tools-${{inputs.host-triple}}
      FERROCENE_HOST: ${{ inputs.host-triple }}
      FERROCENE_TARGETS: ${{ inputs.triples }}
    outputs:
      artifact-name: ${{ env.ARTIFACT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup/
        with:
          build-dependencies: ${{ (inputs.container != '') && 'false' || 'true' }}
      
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ (github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/hoverbear/gha-migration') && secrets.AZURE_OIDC_GHA_CLIENT_ID_STAGING || secrets.AZURE_OIDC_GHA_CLIENT_ID_TRYING }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Authenicate docker with Azure
        if: ${{ (runner.os == 'Linux') }}
        run: az acr login --name ferrocenecr

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.build-artifact }}
          run-id: ${{ inputs.build-run-id }}
      - name: Post artifact download steps
        run: uv run ./ferrocene/ci/scripts/build_cache.py post-download

      - name: Run
        uses: ./.github/actions/run/
        with:
          container: ${{ inputs.container }}
          # See ferrocene/ci/split-tasks.py for a list of tasks executed by this.
          script: |
            uv run x.py --stage 2 dist $(uv run ferrocene/ci/split-tasks.py dist:tools)

      - uses: actions/upload-artifact@v4
        id: artifact
        with:
          name: ${{ env.ARTIFACT }}
          path: build/dist
          retention-days: 1