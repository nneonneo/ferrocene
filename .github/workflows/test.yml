name: Test
run-name: Test (${{inputs.host-triple}})

on:
  workflow_call:
    inputs:
      host-triple:
        type: string
        description: The Rust triple of the host platform
      triples:
        type: string
        description: A comma separated list of targets to build
      host-tools:
        type: boolean
        default: true
        description: If the host tools should be tested (enables the 'test' job)
      self-test-triples:
        # We cannot specify an array here
        # See: https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#onworkflow_callinputsinput_idtype
        #      https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
        type: string
        description: A comma separated list of triples to self-test on
      runner:
        type: string
        description: The GitHub Runner to run on
      build-run-id:
        type: string
        description: The run id of the build workflow
      build-artifact:
        type: string
        description: The artifact from the build workflow
      container:
        type: string
        description: The container URI to run the build in, if any (Linux only)
      emulator-container:
        type: string
        description: The container URI to run the build in, if any (Linux only)
      emulator-script:
        type: string
        description: The script (path) of the emulator script
      environment:
        type: string
    outputs:
      artifact-test-usage:
        description: The name of the resource usage report artifact for the test job
        value: ${{ jobs.test.outputs.artifact-usage }}
      artifact-compiletest-usage:
        description: The name of the resource usage report artifact for the compiletest job
        value: ${{ jobs.compiletest.outputs.artifact-usage }}
      artifact-library-usage:
        description: The name of the resource usage report artifact for the library job
        value: ${{ jobs.library.outputs.artifact-usage }}
      artifact-library-std-usage:
        description: The name of the resource usage report artifact for the library-std job
        value: ${{ jobs.library-std.outputs.artifact-usage }}

jobs:

  test:
    if: ${{ inputs.host-tools }}
    runs-on: ${{ inputs.runner }}
    environment: ${{ inputs.environment }}
    env:
      ARTIFACT_USAGE: test-${{inputs.host-triple}}-usage
      FERROCENE_HOST: ${{ inputs.host-triple }}
      FERROCENE_TARGETS: ${{ inputs.triples }}
    outputs:
      artifact-usage: ${{ env.ARTIFACT_USAGE }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup/
        with:
          build-dependencies: ${{ (inputs.container != '') && 'false' || 'true' }}
      
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ (github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/hoverbear/gha-migration') && secrets.AZURE_OIDC_GHA_CLIENT_ID_STAGING || secrets.AZURE_OIDC_GHA_CLIENT_ID_TRYING }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Authenicate docker with Azure
        if: ${{ (runner.os == 'Linux') }}
        run: az acr login --name ferrocenecr

      - name: Restore build cache
        uses: ./.github/actions/build-cache/
        with:
          build-artifact: ${{ inputs.build-artifact }}
          build-run-id: ${{ inputs.build-run-id }}

      - name: Prepare emulator
        if: ${{ inputs.emulator-script != '' }}
        shell: bash
        run: |
          docker run \
            --rm \
            --interactive \
            --env CI \
            --env REMOTE_TEST_SERVER_STAGE=2 \
            --workdir /home/ci/project \
            --mount "type=bind,src=$(pwd),dst=/home/ci/project" \
            --mount "type=bind,src=/tmp/emulator,dst=/tmp/emulator" \
            --user $(id -u):$(id -g) \
            --network host \
            ${{ inputs.emulator-container }} \
            bash -c "${{ inputs.emulator-script }} prepare"

      - name: Run emulator in background
        if: ${{ inputs.emulator-script != '' }}
        shell: bash
        run: |
            docker run \
            --rm \
            --interactive \
            --env CI \
            --env REMOTE_TEST_SERVER_STAGE=2 \
            --workdir /home/ci/project \
            --mount "type=bind,src=$(pwd),dst=/home/ci/project" \
            --mount "type=bind,src=/tmp/emulator,dst=/tmp/emulator" \
            --user $(id -u):$(id -g) \
            --network host \
            ${{ inputs.emulator-container }} \
            bash -c "${{ inputs.emulator-script }}" & 

      - name: Run
        uses: ./.github/actions/run/
        with:
          test-device-addr: ${{ (inputs.emulator-script != '') && '127.0.0.1:12345' || ''}}
          container: ${{ inputs.container }}
          # See ferrocene/ci/split-tasks.py for a list of tasks executed by this.
          script: |
            ./x.py --stage 2 test $(ferrocene/ci/split-tasks.py test) --ferrocene-test-one-crate-per-cargo-call

      - name: Generate usage report
        uses: ./.github/actions/usage-report/
        with:
          artifact: ${{ env.ARTIFACT_USAGE }}

  compiletest:
    runs-on: ${{ inputs.runner }}
    environment: ${{ inputs.environment }}
    env:
      ARTIFACT_USAGE: test-compiletest-${{inputs.host-triple}}-usage
      FERROCENE_HOST: ${{ inputs.host-triple }}
      FERROCENE_TARGETS: ${{ inputs.triples }}
    outputs:
      artifact-usage: ${{ env.ARTIFACT_USAGE }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup/
        with:
          build-dependencies: ${{ (inputs.container != '') && 'false' || 'true' }}
      
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ (github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/hoverbear/gha-migration') && secrets.AZURE_OIDC_GHA_CLIENT_ID_STAGING || secrets.AZURE_OIDC_GHA_CLIENT_ID_TRYING }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Authenicate docker with Azure
        if: ${{ (runner.os == 'Linux') }}
        run: az acr login --name ferrocenecr

      - name: Restore build cache
        uses: ./.github/actions/build-cache/
        with:
          build-artifact: ${{ inputs.build-artifact }}
          build-run-id: ${{ inputs.build-run-id }}

      - name: Run
        uses: ./.github/actions/run/
        with:
          container: ${{ inputs.container }}
          # See ferrocene/ci/split-tasks.py for a list of tasks executed by this.
          script: |
            ./x.py --stage 2 test $(ferrocene/ci/split-tasks.py test:compiletest) --ferrocene-test-one-crate-per-cargo-call

      - name: Generate usage report
        uses: ./.github/actions/usage-report/
        with:
          artifact: ${{ env.ARTIFACT_USAGE }}

  library:
    runs-on: ${{ inputs.runner }}
    environment: ${{ inputs.environment }}
    env:
      ARTIFACT_USAGE: test-library-${{inputs.host-triple}}-usage
      FERROCENE_HOST: ${{ inputs.host-triple }}
      FERROCENE_TARGETS: ${{ inputs.triples }}
    outputs:
      artifact-usage: ${{ env.ARTIFACT_USAGE }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup/
        with:
          build-dependencies: ${{ (inputs.container != '') && 'false' || 'true' }}
      
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ (github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/hoverbear/gha-migration') && secrets.AZURE_OIDC_GHA_CLIENT_ID_STAGING || secrets.AZURE_OIDC_GHA_CLIENT_ID_TRYING }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Authenicate docker with Azure
        if: ${{ (runner.os == 'Linux') }}
        run: az acr login --name ferrocenecr

      - name: Restore build cache
        uses: ./.github/actions/build-cache/
        with:
          build-artifact: ${{ inputs.build-artifact }}
          build-run-id: ${{ inputs.build-run-id }}

      - name: Run
        uses: ./.github/actions/run/
        with:
          container: ${{ inputs.container }}
          # See ferrocene/ci/split-tasks.py for a list of tasks executed by this.
          script: |
            ./x.py --stage 2 test $(ferrocene/ci/split-tasks.py test:library) --ferrocene-test-one-crate-per-cargo-call

      - name: Generate usage report
        uses: ./.github/actions/usage-report/
        with:
          artifact: ${{ env.ARTIFACT_USAGE }}

  library-std:
    runs-on: ${{ inputs.runner }}
    environment: ${{ inputs.environment }}
    env:
      ARTIFACT_USAGE: test-library-std-${{inputs.host-triple}}-usage
      FERROCENE_HOST: ${{ inputs.host-triple }}
      FERROCENE_TARGETS: ${{ inputs.triples }}
    outputs:
      artifact-usage: ${{ env.ARTIFACT_USAGE }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup/
        with:
          build-dependencies: ${{ (inputs.container != '') && 'false' || 'true' }}
      
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ (github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/hoverbear/gha-migration') && secrets.AZURE_OIDC_GHA_CLIENT_ID_STAGING || secrets.AZURE_OIDC_GHA_CLIENT_ID_TRYING }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Authenicate docker with Azure
        if: ${{ (runner.os == 'Linux') }}
        run: az acr login --name ferrocenecr

      - name: Restore build cache
        uses: ./.github/actions/build-cache/
        with:
          build-artifact: ${{ inputs.build-artifact }}
          build-run-id: ${{ inputs.build-run-id }}

      - name: Run
        uses: ./.github/actions/run/
        with:
          container: ${{ inputs.container }}
          # See ferrocene/ci/split-tasks.py for a list of tasks executed by this.
          script: |
            ./x.py --stage 2 test $(ferrocene/ci/split-tasks.py test:library-std) --ferrocene-test-one-crate-per-cargo-call

      - name: Generate usage report
        uses: ./.github/actions/usage-report/
        with:
          artifact: ${{ env.ARTIFACT_USAGE }}