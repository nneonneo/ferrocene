name: Dist host
run-name: Dist (${{inputs.host-triple}})

on:
  workflow_call:
    inputs:
      host-triple:
        type: string
        description: The Rust triple of the host platform
      # We cannot specify an array here
      # See: https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#onworkflow_callinputsinput_idtype
      #      https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
      triples:
        type: string
        description: A comma separated list of targets to build
      runner:
        type: string
        description: The GitHub Runner to run on
      build-run-id:
        type: string
        description: The run id of the build workflow
      build-artifact:
        type: string
        description: The artifact from the build workflow
      container:
        type: string
        description: The container URI to run the build in, if any (Linux only)
      environment:
        type: string
    outputs:
      run-id:
        description: The id of the workflow run
        value: ${{ github.run_id }}


jobs:
  traceability-matrix:
    runs-on: ${{ inputs.runner }}
    env:
      ARTIFACT: tracability-matrix
      FERROCENE_HOST: x86_64-unknown-linux-gnu
      RUST_CONFIGURE_ARGS: |
        --set ferrocene.test-outcomes=custom
        --set ferrocene.test-outcomes-dir=/tmp/test-outcomes
      SCRIPT: |
        ./x.py run ferrocene/tools/traceability-matrix
    outputs:
      artifact-name: ${{ env.ARTIFACT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup/
        with:
          build-dependencies: ${{ (inputs.container != '') && 'false' || 'true' }}
      
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ (github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/hoverbear/gha-migration') && secrets.AZURE_OIDC_GHA_CLIENT_ID_STAGING || secrets.AZURE_OIDC_GHA_CLIENT_ID_TRYING }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Authenicate docker with Azure
        if: ${{ (runner.os == 'Linux') }}
        run: az acr login --name ferrocenecr

      - name: Restore build cache
        uses: ./.github/actions/restore-build-cache/
        with:
          build-artifact: ${{ inputs.build-artifact }}
          build-run-id: ${{ inputs.build-run-id }}

      - name: Download usage artifacts
        uses: actions/download-artifact@v4
        with:
          path: test-outcomes
          pattern: artifact-*-usage
          merge-multiple: true

      - name: Run
        uses: ./.github/actions/run/
        with:
          container: ${{ inputs.container }}
          configure: |
            --set ferrocene.test-outcomes=custom
            --set ferrocene.test-outcomes-dir=test-outcomes
          # See ferrocene/ci/split-tasks.py for a list of tasks executed by this.
          script: |
            ./x.py run ferrocene/tools/traceability-matrix

      # - uses: actions/upload-artifact@v4
      #   id: artifact
      #   with:
      #     name: ${{ env.ARTIFACT }}
      #     retention-days: 1